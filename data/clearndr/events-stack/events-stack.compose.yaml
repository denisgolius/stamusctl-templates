configs:
    fluentd-config:
        file: fluentd/fluent.conf
    fluentd-template:
        file: fluentd/template.json
    opensearch-config:
        file: opensearch/opensearch.yml
    opensearch-dashboard-config:
        file: opensearch_dashboards/opensearch_dashboards.yml

volumes:
    {{- if or (eq .Values.opensearch.datapath "opensearch-data") (eq .Values.opensearch.datapath "elastic-data") }}
    {{ .Values.opensearch.datapath }}: #for ES data persistency
        name: {{ .Values.opensearch.datapath }}-{{ .Release.seed }}
    {{- else }}
    opensearch-data: #for ES data persistency
        name: opensearch-data-{{ .Release.seed }}
    {{- end }}
    fluentd-pos:
        name: fluentd-pos-{{ .Release.seed }}

services:
    opensearch:
        image: opensearchproject/opensearch:2.19.0
        container_name: {{template "base-name" .}}-opensearch-{{ .Release.seed }}
        restart: {{ .Values.globals.restartmode | default "unless-stopped" }}
        healthcheck:
            test: ['CMD-SHELL', 'curl --silent --fail localhost:9200/_cluster/health || exit 1']
            interval: 10s
            timeout: 5s
            retries: 3
            start_period: 30s
        environment:
            - plugins.security.disabled=true
            - discovery.type=single-node
            - OPENSEARCH_JAVA_OPTS=-Xms{{ .Values.opensearch.memory | default "2g" }} -Xmx{{ .Values.opensearch.memory | default "2g" }}
            - OPENSEARCH_INITIAL_ADMIN_PASSWORD=YH8pq2lqNSnVEQZ
        volumes:
            - {{ .Values.opensearch.datapath | default "opensearch-data" }}:/usr/share/opensearch/data
        {{- if or .Values.global.exposePorts .Values.opensearch.openPort }}
        ports:
            - 9200:9200
        {{- end }}
        ulimits:
            memlock:
                soft: -1
                hard: -1
        networks:
            network:

    opensearch-dashboards:
        image: ghcr.io/stamusnetworks/stamus-images/opensearch-dashboards:2.19
        # build:
        #     context: .
        #     dockerfile: Dockerfile.osd
        container_name: {{template "base-name" .}}-opensearch-dashboards-{{ .Release.seed }}
        restart: {{ .Values.globals.restartmode | default "unless-stopped" }}
        configs:
            - source: opensearch-config
              target: /usr/share/opensearch-dashboards/config/opensearch.yml
            - source: opensearch-dashboard-config
              target: /usr/share/opensearch-dashboards/config/opensearch_dashboards.yml
        environment:
            - plugins.security.disabled=true
            - discovery.type=single-node
            - DISABLE_SECURITY_DASHBOARDS_PLUGIN=true
        healthcheck:
            test: ['CMD-SHELL', 'curl --silent --fail localhost:5601 || exit 1']
            interval: 30s
            timeout: 5s
            retries: 3
            start_period: 30s
        depends_on:
            opensearch:
                condition: service_healthy
        {{- if or .Values.global.exposePorts .Values.opensearch.dashboard.openPort }}
        ports:
            - 5601:5601
        {{- end }}
        networks:
            network:

    fluentd:
        image: ghcr.io/stamusnetworks/stamus-images/fluentd:1.16
        # build:
        #     context: .
        #     dockerfile: Dockerfile.fluentd
        user: root
        container_name: {{template "base-name" .}}-fluentd-{{ .Release.seed }}
        command: fluentd -c /fluentd/etc/fluent.conf
        configs:
            - source: fluentd-config
              target: /fluentd/etc/fluent.conf
            - source: fluentd-template
              target: /fluentd/etc/template.json
        volumes:
            - fluentd-pos:/fluentd/log/td-agent
            - {{ .Release.location }}/containers-data/suricata/logs:/var/log/suricata:ro
        networks:
            network:

    {{ if .Values.suricata.unixSocket.enabled -}}
    socat:
        image: alpine/socat:1.8.0.1
        container_name: {{template "base-name" .}}-socat-{{ .Release.seed }}
        user: root
        command: UNIX-LISTEN:/var/log/suricata/tls_buffer.sock TCP:fluentd:20001
        volumes:
            - suricata-socket:/var/run/suricata/
        networks:
            network:

    socat-readpcap:
        image: alpine/socat:1.8.0.1
        container_name: {{template "base-name" .}}-socat-readpcap-{{ .Release.seed }}
        user: root
        command: UNIX-LISTEN:/var/log/suricata/tls_buffer.sock TCP:fluentd:20001
        volumes:
            - {{ .Release.location }}/containers-data/suricata/logs:/var/log/suricata
        networks:
            network:
    {{- end }}
